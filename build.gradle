plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.14'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.whatbook'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('testcontainersVersion', "1.18.3")
}
dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-mysql'
	testImplementation 'org.testcontainers:mysql:1.16.0'
	testImplementation 'net.joshka:junit-json-params:1.1.0'
	implementation group: 'org.glassfish', name: 'javax.json', version: '1.1.4' // Adjust version as needed

	testImplementation 'org.testcontainers:junit-jupiter'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}
dependencyManagement {
	imports {
		mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
	}
}

bootBuildImage{
	imageName="${project.name}"
	environment=["BP_JVM_VERSION":"17.*"]
	docker{
		publishRegistry{
			username = project.findProperty("registryUsername")?:""
			password = project.findProperty("registryToken")?:""
			url = project.findProperty("registryUrl")?:""
		}
	}
}


tasks.named('test') {
	useJUnitPlatform()
}
