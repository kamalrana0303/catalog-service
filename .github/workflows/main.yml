name: Commit Stage
on: push
jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: gradle
      - name: Code vulnerability scanning
        uses: anchore/scan-action@v3
        id: scan
        with:
          path: "${{github.workspace}}"
          fail-build: false
          severity-cutoff: high
          acs-report-enable: true
      - name: Upload vulnerability report
        uses: github/codeql-action/upload-sarif@v2
        if: success() || failure()
        with:
          sarif_file: ${{steps.scan.outputs.sarif}}
      - name: Create Docker Network
        run: docker network create db-network

      - name: Start MySql Container
        id: start-mysql
        run: |
          docker run -d  -p 3306:3306 -e MYSQL_ROOT_PASSWORD=password -e MYSQL_DATABASE=projectdb -v ${PWD}/db:/var/lib/mysql --net db-network --name db mysql:8
        continue-on-error: false
      - name: log mysql container
        id: logs
        run: |
          docker ps -a
          docker logs db

#      - name: Wait for Mysql Container
#        id: wait-mysql
#        run: |
#          for i in {1..30}; do
#            if docker logs db 2>&1 | grep "ready for connections" &> /dev/null; then
#              echo "MySQL container is up and running."
#              exit 0
#            fi
#              sleep 5
#          done
#          echo "MySQL container did not start within the expected time."
#          exit 1
#        continue-on-error: true

      - name: Build, unit tests and integeration tests
        run: |
          docker ps -a
          chmod +x gradlew
          ./gradlew build
